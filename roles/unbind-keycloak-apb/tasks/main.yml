---
- name: Retrieve route to keycloak
  shell: "oc get configmaps/{{keycloak_service_name}} -n {{ namespace }} -o jsonpath={.data.uri}"
  register: keycloak_uri

- set_fact:
    CLIENT_CONFIG: "{{ _apb_bind_creds.config | from_json }}"

- set_fact:
    KEYCLOAK_REALM: "{{ CLIENT_CONFIG.realm }}"
    KEYCLOAK_URI: "{{ keycloak_uri.stdout }}"

- set_fact:
    KCADM_REALM: "{{ _apb_provision_creds.USE_SHARED_SERVICE | ternary(KEYCLOAK_REALM,keycloak_admin_realm_name) }}"

- name: Generate keycloak auth token
  uri:
    url: "{{ KEYCLOAK_URI }}/auth/realms/{{ KCADM_REALM }}/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ _apb_provision_creds.USERNAME }}&password={{ _apb_provision_creds.PASSWORD }}&grant_type=password"
    validate_certs: no
  register: keycloak_auth_response
  retries: 20
  delay: 2
  until: keycloak_auth_response.status == 503 or
         keycloak_auth_response.status in [200, 401, 403]
  ignore_errors: yes

# Delete Keycloak client
- name: Delete client {{ CLIENT_CONFIG.resource }} in realm {{ KEYCLOAK_REALM }}
  uri:
    url: "{{ KEYCLOAK_URI }}/auth/admin/realms/{{ KEYCLOAK_REALM }}/clients/{{ _apb_bind_creds.client_id }}"
    method: DELETE
    validate_certs: no
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 204
    return_content: yes
  when: keycloak_auth_response.status != 503

# Delete client secret
- name: Delete keycloak-{{ _apb_bind_creds.client_name }} secret
  k8s_v1_secret:
    name: "{{ keycloak_secret_name }}-{{ CLIENT_CONFIG.resource | lower }}"
    namespace: "{{ namespace }}"
    state: absent
