---

- name: Get the created keycloak configmap
  shell: "oc get configmap -o name | grep {{ keycloak_configmap_name }}"
  register: kc_configmap
  failed_when: keycloak_configmap_name not in kc_configmap.stdout

- name: Get Keycloak URI from configmap
  shell: "oc get {{ kc_configmap.stdout }} -o jsonpath='{.data.uri}'"
  register: kc_uri

- name: Test the Keycloak URI
  uri:
    url: "{{ kc_uri.stdout }}"
    return_content: yes
    validate_certs: no
  register: webpage
  retries: 10
  delay: 20
  until: webpage.status == 200

- name: Check that the keycloak login webpage is accessible
  uri:
    url: "{{ keycloak_protocol }}://{{ keycloak_route.stdout }}/auth/"
    return_content: yes
    validate_certs: no
  register: webpage
  retries: 10
  delay: 20
  until: '"Welcome to Keycloak" in webpage.content'

- name: Check that the metrics endpoint works
  uri:
    url: "{{ keycloak_protocol }}://{{ keycloak_route.stdout }}/auth/realms/master/metrics"
    return_content: yes
    validate_certs: no
  register: webpage
  retries: 10
  delay: 20
  until: '"jvm_memory_bytes_used" in webpage.content'

- name: Check that keycloak secret exists
  shell: "oc get secrets -o name | grep {{ keycloak_secret_name }}"
  register: kc_secret
  failed_when: keycloak_secret_name not in kc_secret.stdout
